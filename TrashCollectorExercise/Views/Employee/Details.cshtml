@model TrashCollectorExercise.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.firstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.firstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.lastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.lastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.streetAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.streetAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.city)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.city)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.zip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.zip)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.balance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.balance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.startBreak)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.startBreak)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.endBreak)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.endBreak)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.oneTimePickup)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.oneTimePickup)
        </dd>

        @*<dt>
                @Html.DisplayNameFor(model => model.ApplicationId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ApplicationId)
            </dd>*@

    </dl>
</div>
<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id })*@ |
    @Html.ActionLink("Back to List", "Index")
</p>





<div id="map"></div>

<script>

    
    @{
        string address = Model.streetAddress + " " + Model.city + " " + Model.state + " " + Model.zip;

        API api = new API();
        string googleRequest = api.GoogleAPICall;
        string keyy = api.Key;

    }

    var test3 = [];
    geocode();

    function Master(data) {
        //var here = geocode();
        var test = data;
        console.log(test);
        test3 = data;
        console.log(test3);
        initMap(data);
    }

    var final = "test";
    //geocode();
    function geocode() {
        var latLng = [];
        let params = {
            "address": @address,
            "key": @keyy;
        }
        let query = Object.keys(params)
            .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))
            .join('&');
        var url = 'https://maps.googleapis.com/maps/api/geocode/json?' + query;
        fetch(url)
            .then(response => response.json())
            .then(data => {
                console.log(data)
                var latA = (data.results[0].geometry.location.lat)
                var lngA = (data.results[0].geometry.location.lng)
                latLng = [latA, lngA]
                console.log(latLng)
                Master(latLng);
            })
            .catch(error => console.error(error))
    }

    var map;
    function initMap(coords) {

        // Constructor creates a new map - only center and zoom are required.
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: coords[0], lng: coords[1] },
            zoom: 13
        });
        var destination = { lat: coords[0], lng: coords[1] };
        var marker = new google.maps.Marker({
            position: destination,
            map: map,
            title: '@address'
        });
    }
</script>

<script async defer
        src="src=@googleRequest">
</script>


